se = F,
method.args = list(start = c(p1=1, p2=1)),
linetype = 'dashed',
color = mut_colors['C59R']) +
annotate("text",
x = 0.3, y = 0.005,
label = 'regional linear fit',
angle = -15,
color = 'gray',
size = 5) +
annotate("text",
x = 0.6, y = 0.15,
label = 'regional linear fit',
angle = -32,
color = mut_colors['S108N'],
size = 5) +
annotate("text",
x = 0, y = 0.5,
label = 'hypothetical\nnon-linear\n"global" fit',
color = mut_colors['C59R'],
size = 5) +
scale_x_continuous(name = expression(paste('Background fitness, ', italic(f), '(', italic(B), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = c(0.1, 0.1)) +
scale_y_continuous(name = expression(paste('Fitness effect of C59R, ', Delta, italic(f), sep = '')),
breaks = pretty_breaks(n = 3),
expand = c(0.1, 0.1)) +
scale_color_manual(values = c('gray', as.character(mut_colors['S108N']))) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.position = 'none',
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 0),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
ggplot(df, aes(x = background_f, y = d_f)) +
geom_point(data = df[df$color == 0, ],
color = 'black',
cex = 3) +
geom_smooth(aes(group = ellipse, color = ellipse),
method = 'lm',
formula = y ~ x,
se = F) +
geom_smooth(method = 'nls',
formula = y ~ (p1*(x - 0.1)^3*exp(-p2*x), 0),
se = F,
method.args = list(start = c(p1=1, p2=1)),
linetype = 'dashed',
color = mut_colors['C59R']) +
annotate("text",
x = 0.3, y = 0.005,
label = 'regional linear fit',
angle = -15,
color = 'gray',
size = 5) +
annotate("text",
x = 0.6, y = 0.15,
label = 'regional linear fit',
angle = -32,
color = mut_colors['S108N'],
size = 5) +
annotate("text",
x = 0, y = 0.5,
label = 'hypothetical\nnon-linear\n"global" fit',
color = mut_colors['C59R'],
size = 5) +
scale_x_continuous(name = expression(paste('Background fitness, ', italic(f), '(', italic(B), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = c(0.1, 0.1)) +
scale_y_continuous(name = expression(paste('Fitness effect of C59R, ', Delta, italic(f), sep = '')),
breaks = pretty_breaks(n = 3),
expand = c(0.1, 0.1)) +
scale_color_manual(values = c('gray', as.character(mut_colors['S108N']))) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.position = 'none',
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 0),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
ggplot(df, aes(x = background_f, y = d_f)) +
geom_point(data = df[df$color == 0, ],
color = 'black',
cex = 3) +
geom_smooth(aes(group = ellipse, color = ellipse),
method = 'lm',
formula = y ~ x,
se = F) +
geom_smooth(method = 'nls',
formula = y ~ p1*(x - 0.1)^3*exp(-p2*x),
se = F,
method.args = list(start = c(p1=1, p2=1)),
linetype = 'dashed',
color = mut_colors['C59R']) +
annotate("text",
x = 0.3, y = 0.005,
label = 'regional linear fit',
angle = -15,
color = 'gray',
size = 5) +
annotate("text",
x = 0.6, y = 0.15,
label = 'regional linear fit',
angle = -32,
color = mut_colors['S108N'],
size = 5) +
annotate("text",
x = 0, y = 0.5,
label = 'hypothetical\nnon-linear\n"global" fit',
color = mut_colors['C59R'],
size = 5) +
scale_x_continuous(name = expression(paste('Background fitness, ', italic(f), '(', italic(B), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = c(0.1, 0.1)) +
scale_y_continuous(name = expression(paste('Fitness effect of C59R, ', Delta, italic(f), sep = '')),
breaks = pretty_breaks(n = 3),
expand = c(0.1, 0.1)) +
scale_color_manual(values = c('gray', as.character(mut_colors['S108N']))) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.position = 'none',
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 0),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
ggplot(df, aes(x = background_f, y = d_f)) +
geom_point(data = df[df$color == 0, ],
color = 'black',
cex = 3) +
geom_smooth(aes(group = ellipse, color = ellipse),
method = 'lm',
formula = y ~ x,
se = F) +
geom_smooth(method = 'nls',
formula = y ~ p1*x^3*exp(-p2*x),
se = F,
method.args = list(start = c(p1=1, p2=1)),
linetype = 'dashed',
color = mut_colors['C59R']) +
annotate("text",
x = 0.3, y = 0.005,
label = 'regional linear fit',
angle = -15,
color = 'gray',
size = 5) +
annotate("text",
x = 0.6, y = 0.15,
label = 'regional linear fit',
angle = -32,
color = mut_colors['S108N'],
size = 5) +
annotate("text",
x = 0, y = 0.5,
label = 'hypothetical\nnon-linear\n"global" fit',
color = mut_colors['C59R'],
size = 5) +
scale_x_continuous(name = expression(paste('Background fitness, ', italic(f), '(', italic(B), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = c(0.1, 0.1)) +
scale_y_continuous(name = expression(paste('Fitness effect of C59R, ', Delta, italic(f), sep = '')),
breaks = pretty_breaks(n = 3),
expand = c(0.1, 0.1)) +
scale_color_manual(values = c('gray', as.character(mut_colors['S108N']))) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.position = 'none',
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 0),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
source("~/GitHub/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
source("Z:/work/micro-eco/brandon/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
install/packages('lmtest')
install.packages('lmtest')
source("Z:/work/micro-eco/brandon/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
# all global epistasis patterns
ggplot(ge_data, aes(x = background_f, y = d_f, color = knock_in, group = dose)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
#breaks = c(-1, 0, 1), labels = c('-1.0', '0.0', '1.0')) +
scale_color_manual(name = 'Mutation', values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
View(plot_this)
# all global epistasis patterns
ggplot(ge_data, aes(x = background_f, y = d_f, color = knock_in, group = dose)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
#breaks = c(-1, 0, 1), labels = c('-1.0', '0.0', '1.0')) +
scale_color_manual(name = 'Mutation', values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
plot_this <- NULL # some tweaking to homogenize y scales across rows
for (focal_mut in unique(ge_data$knock_in)) {
rowlimits <- c(min(ge_data$d_f[ge_data$knock_in == focal_mut]),
max(ge_data$d_f[ge_data$knock_in == focal_mut]))
mean_x <- aggregate(formula = background_f ~ dose,
data = ge_data[ge_data$knock_in == focal_mut, ],
FUN = mean)
plot_this <- rbind(plot_this,
data.frame(dose = mean_x$dose,
knock_in = focal_mut,
background_f = mean_x$background_f,
d_f = rep(rowlimits, length(unique(ge_data$dose)))))
}
ggplot(ge_data, aes(x = background_f, y = d_f, color = knock_in, group = dose)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
#breaks = c(-1, 0, 1), labels = c('-1.0', '0.0', '1.0')) +
scale_color_manual(name = 'Mutation', values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
View(ge_data)
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope, group = dose)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
#breaks = c(-1, 0, 1), labels = c('-1.0', '0.0', '1.0')) +
scale_color_manual(name = 'Mutation', values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
plot_this$slope <- NA
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope, group = dose)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
#breaks = c(-1, 0, 1), labels = c('-1.0', '0.0', '1.0')) +
scale_color_manual(name = 'Mutation', values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope, group = dose)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
scale_color_gradient2(name = 'slope',
low = '#1e9fd3',
high = '#ef3a37',
mid = 'white',
midpoint = 0,
breaks = c(-0.4, 0, 0.4))
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope, group = dose)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2))
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope, group = dose)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free')
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black')
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free')
plot_this$slope <- 0
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
scale_color_gradient2(name = 'slope',
low = '#1e9fd3',
high = '#ef3a37',
mid = 'white',
midpoint = 0,
breaks = c(-0.4, 0, 0.4))
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
scale_color_gradient2(name = 'slope',
low = '#1e9fd3',
high = '#ef3a37',
mid = 'white',
midpoint = 0,
breaks = c(-0.4, 0, 0.4),
limits = c(-0.5, 0.5)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
scale_color_gradient2(name = 'slope',
low = '#1e9fd3',
high = '#ef3a37',
mid = 'white',
midpoint = 0,
breaks = c(-0.4, 0, 0.4),
limits = c(-1, 1)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16))
ggplot(ge_data, aes(x = background_f, y = d_f, color = slope)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black') +
geom_blank(data = plot_this) +
facet_wrap(knock_in ~ dose,
nrow = length(mut_colors),
scales = 'free') +
geom_smooth(method = 'lm',
se = F,
formula = y~x,
fullrange = T) +
scale_x_continuous(name = 'F (genetic background)',
breaks = pretty_breaks(n = 2)) +
scale_y_continuous(name = expression(paste(Delta, 'F', sep = '')),
breaks = pretty_breaks(n = 2)) +
scale_color_gradient2(name = 'slope',
low = '#1e9fd3',
high = '#ef3a37',
mid = 'white',
midpoint = 0,
breaks = c(-0.4, 0, 0.4),
limits = c(-0.8, 0.8)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1)) +
guides(color = guide_colorbar(ticks.colour = NA))
ggsave(file = paste('../plots/FEEs_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 380,
height = 200,
units = 'mm')
source("Z:/work/micro-eco/brandon/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
source("Z:/work/micro-eco/brandon/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
