df <- df[, c('edge_id', 'source', 'target', 'source.nmut', 'target.nmut', 'source.f', 'target.f', 'color')]
dfx <- gather(df[, c(1, 4, 5)], position, nmut, source.nmut:target.nmut)
dfx$position <- setNames(c('source', 'target'), c('source.nmut', 'target.nmut'))[dfx$position]
dfy <- gather(df[, c(1, 6, 7)], position, f, source.f:target.f)
dfy$position <- setNames(c('source', 'target'), c('source.f', 'target.f'))[dfy$position]
dfxy <- merge(dfx, dfy, by = c('edge_id', 'position'))
df <- merge(dfxy, df[, c('edge_id', 'color')], by = 'edge_id')
dy <- min(c(max(landscape$f) - landscape$f[1], landscape$f[1] - min(landscape$f)))
dy <- round(dy/0.1)*0.1
ybreaks <- seq(landscape$f[1] - 10*dy, landscape$f[1] + 10*dy, by = dy)
myplot <-
ggplot(df, aes(x = nmut, y = f, group = edge_id, color = color)) +
geom_line() +
scale_x_continuous(name = '# mutations',
breaks = 0:n_mut,
labels = as.character(0:n_mut)) +
scale_y_continuous(name = 'Fitness',
breaks = pretty_breaks(n = 3),
expand = c(0.05, 0.05)) +
scale_color_manual(values = setNames(mycolors, LETTERS[1:length(mycolors)])) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
panel.border = element_blank(),
legend.position = 'none',
axis.title = element_text(size = 18),
axis.text = element_text(size = 16)) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf,size=0.5) +
annotate("segment", x=-Inf, xend=Inf, y=-Inf, yend=-Inf,size=0.5)
if (save.plot != F) {
ggsave(myplot,
file = paste('../plots/', save.plot, '.pdf', sep = ''),
dpi = 600,
width = 100,
height = 80,
units = 'mm')
}
return(myplot)
}
# full fitnesss graph
df <- data.frame(genot = orderName(paste(ge_data$background[ge_data$dose == '0'],
ge_data$knock_in[ge_data$dose == '0'],
sep = ',')),
f = ge_data$background_f[ge_data$dose == '0'] + ge_data$d_f[ge_data$dose == '0'])
df <- aggregate(formula = f~genot,
data = df,
FUN = mean)
for (i in 1:nrow(df)) if (substr(df$genot[i], 1, 1) == ',') df$genot[i] <- substr(df$genot[i], 2, nchar(df$genot[i]))
df <- rbind(df, data.frame(genot = '', f = data$dose_0[data$genot_bin == '0000']))
landscape <- df
landscape$genot <- gsub('C59R', '1', landscape$genot)
landscape$genot <- gsub('I164L', '2', landscape$genot)
landscape$genot <- gsub('N51I', '3', landscape$genot)
landscape$genot <- gsub('S108N', '4', landscape$genot)
plotGraph(landscape)
ggsave(file = paste('../plots/fitnessGraph-full_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 100,
height = 100,
units = 'mm')
# inset
df <- df[df$genot %in% c('N51I', 'I164L,N51I', 'C59R,N51I', 'C59R,I164L,N51I'), ]
df$nmut <- sapply(df$genot, FUN = function(x) length(strsplit(x, split = ',')[[1]]))
ggplot(df, aes(x = nmut, y = f)) +
geom_point(cex = 3) +
scale_y_continuous(name = 'Fitness',
limits = c(min(df$f), max(c(df$f[df$nmut == max(df$nmut)],
sum(df$f[df$nmut == (max(df$nmut) - 1)]) - df$f[df$nmut == min(df$nmut)]))),
expand = rep(0.05, 2),
breaks = pretty_breaks(n = 3)) +
scale_x_continuous(expand = rep(0.1, 2)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
panel.border = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf, size=0.5)
ggsave(file = paste('../plots/fitnessGraph_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 100,
height = 100,
units = 'mm')
### GET CONTRIBUTIONS TO SLOPE OF MUT. i
getContributions <- function(mut_i, mut_j, save.plots = F) {
# fitness effect
df <- ge_data[ge_data$knock_in == mut_j, ]
df <- df[!grepl(mut_i, df$background), ] # keep only backgrounds of i, B(i)
df_mean <- aggregate(formula = d_f~dose,
data = df[, c('dose', 'd_f')],
FUN = mean) # means for each dose
df_wt <- df[df$background == '', ] # fitness effect of mutation in wild-type
ggplot(df, aes(x = dose, y = d_f, group = 1, color = background)) +
geom_line(data = cbind(df_mean, background = 'mean')) +
geom_line(data = df_wt) +
geom_point(alpha = 0.25,
cex = 2,
shape = 16) +
annotate("text", x = 7.25, y = df_wt$d_f[df_wt$dose == '1e3'],
label = 'On wild-type',
hjust = 0, color = 'firebrick1') +
annotate("text", x = 7.25, y = df_mean$d_f[df_mean$dose == '1e3'],
label = expression(paste('Average on backgrounds of ', mut_i, ',  ',
symbol("\341")*delta*italic(F)[italic(j)]*symbol("\361")[italic(B)(italic(i))])),
hjust = 0, color = 'black') +
scale_x_discrete(name = expression(paste('Drug dose (', mu, 'M)', sep = '')),
labels = mylabels) +
scale_y_continuous(name = paste('Fitness effect\nof mut. ', mut_j, sep = ''),
breaks = pretty_breaks(n = 2)) +
scale_color_manual(values = setNames(c('firebrick1', rep('black', 4)),
c(df$background[df$dose == '0'], 'mean'))) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust = 0,
size = 16),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.position = 'none')
if(save.plots) {
ggsave(file = paste('../plots/dF_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 200,
height = 80,
units = 'mm')
}
# interaction
eps <- data.frame(dose = character(0),
background = character(0),
f_bg = numeric(0),
f_bg_i = numeric(0),
f_bg_j = numeric(0),
f_bg_ij = numeric(0),
eps_ij = numeric(0))
bgs <- unique(ge_data$background[!grepl(mut_i, ge_data$background) & !grepl(mut_j, ge_data$background)])
for (d in unique(ge_data$dose)) {
ge_data_i <- ge_data[ge_data$dose == d, ]
f_bg <- unique(ge_data_i[ge_data_i$background %in% bgs, c('background', 'background_f')])
colnames(f_bg) <- c('background', 'f')
f_bg <- f_bg[order(f_bg$background), ]
f_bg_i <- ge_data_i[ge_data_i$background %in% bgs & ge_data_i$knock_in == mut_j, ]
f_bg_i$f <- f_bg_i$background_f + f_bg_i$d_f
f_bg_i <- f_bg_i[, c('background', 'f')]
f_bg_i <- f_bg_i[order(f_bg_i$background), ]
f_bg_j <- ge_data_i[ge_data_i$background %in% bgs & ge_data_i$knock_in == mut_i, ]
f_bg_j$f <- f_bg_j$background_f + f_bg_j$d_f
f_bg_j <- f_bg_j[, c('background', 'f')]
f_bg_j <- f_bg_j[order(f_bg_j$background), ]
f_bg_ij <- ge_data_i[(grepl(mut_i, ge_data_i$background) & ge_data_i$knock_in == mut_j) | (grepl(mut_j, ge_data_i$background) & ge_data_i$knock_in == mut_i), ]
f_bg_ij$background <- sapply(f_bg_ij$background,
FUN = function(x) {
x <- strsplit(x, split = ',')[[1]]
x <- x[!(x %in% c(mut_i, mut_j))]
x <- paste(x, collapse = ',')
return(x)
})
f_bg_ij$f <- f_bg_ij$background_f + f_bg_ij$d_f
f_bg_ij <- aggregate(formula = f~background,
data = f_bg_ij[, c('background', 'f')],
FUN = mean)
f_bg_ij <- f_bg_ij[order(f_bg_ij$background), ]
eps <- rbind(eps, data.frame(dose = d,
background = f_bg$background,
f_bg = f_bg$f,
f_bg_i = f_bg_i$f,
f_bg_j = f_bg_j$f,
f_bg_ij = f_bg_ij$f,
eps_ij = f_bg_ij$f - f_bg_i$f - f_bg_j$f + f_bg$f))
}
eps_mean <- aggregate(formula = eps_ij~dose,
data = eps[, c('dose', 'eps_ij')],
FUN = mean)
eps_wt <- eps[eps$background == '', ]
ggplot(eps, aes(x = dose, y = eps_ij, group = 1, color = background)) +
geom_line(data = cbind(eps_mean, background = 'mean')) +
geom_line(data = eps_wt) +
geom_point(alpha = 0.25,
cex = 2,
shape = 16) +
annotate("text", x = 7.25, y = eps_wt$eps_ij[eps_wt$dose == '1e3'],
label = 'On wild-type',
hjust = 0, color = 'firebrick1') +
annotate("text", x = 7.25, y = eps_mean$eps_ij[eps_mean$dose == '1e3'],
label = expression(paste('Average across all backgrounds,  ',
symbol("\341")*italic(epsilon)[italic(ij)]*symbol("\361"))),
hjust = 0, color = 'black') +
scale_x_discrete(name = expression(paste('Drug dose (', mu, 'M)', sep = '')),
labels = mylabels) +
scale_y_continuous(name = paste('Epistasis between\n', mut_i, ' and ', mut_j, sep = ''),
breaks = pretty_breaks(n = 2)) +
scale_color_manual(values = setNames(c('firebrick1', rep('black', 4)),
c(eps$background[eps$dose == '0'], 'mean'))) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust = 0,
size = 16),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.position = 'none')
if (save.plots) {
ggsave(file = paste('../plots/eps-ij_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 200,
height = 80,
units = 'mm')
}
# data frame to return
return_df <- merge(df[, c('dose', 'background', 'd_f')],
eps[, c('dose', 'background', 'eps_ij')],
by = c('dose', 'background'),
all = T)
return_df <- data.frame(dose = return_df$dose,
focal_mut = mut_i,
mut_j = mut_j,
background = return_df$background,
dF_j = return_df$d_f,
eps_ij = return_df$eps_ij)
return(return_df)
}
# get all contributions at all doses
muts <- unique(ge_data$knock_in)
contrib <- data.frame(dose = character(0),
focal_mut = character(0),
mut_j = character(0),
background = character(0),
dF_j = numeric(0),
eps_ij = numeric(0))
for(mut_i in muts) {
for (mut_j in muts[muts != mut_i]) {
contrib <- rbind(contrib,
getContributions(mut_i, mut_j))
}
}
# plot dF_j as a function of drug dose
contrib$focal_mut <- factor(contrib$focal_mut)
contrib$dose <- factor(contrib$dose, levels = c('0', paste('1e', -2:3, sep = '')))
plot_these_focal_muts <- 'C59R'
plot_these_focal_muts <- muts # FIXME: uncomment for plot with all mutations
ggplot(contrib[contrib$focal_mut %in% plot_these_focal_muts, ],
aes(x = dose, y = dF_j, color = mut_j, group = mut_j)) +
geom_point() +
geom_smooth(aes(fill = mut_j),
method = 'loess',
formula = y~x,
alpha = 0.25) +
facet_wrap(~focal_mut,
ncol = 1,
scales = 'free_y',
labeller = label_bquote(Mut.~italic(i)~'='~.(levels(contrib$focal_mut)[focal_mut]))) +
scale_x_discrete(name = expression(paste('Drug dose (', mu, 'M)', sep = '')),
breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1,3,5,7)]) +
scale_y_continuous(name = expression(symbol("\341")*delta*italic(f)[italic(j)]*symbol("\361")[italic(B)(italic(i))]),
breaks = pretty_breaks(n = 2)) +
scale_color_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = mut_colors) +
scale_fill_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust = 0,
size = 16),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14))
ggsave(file = paste('../plots/df_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
#height = 120,
height = 200, # FIXME: uncomment if all mutations are being plotted
units = 'mm')
# plot eps_ij as a function of drug dose
ggplot(contrib[contrib$focal_mut %in% plot_these_focal_muts, ],
aes(x = dose, y = eps_ij, color = mut_j, group = mut_j)) +
geom_point() +
geom_smooth(aes(fill = mut_j),
method = 'loess',
formula = y~x,
alpha = 0.25) +
facet_wrap(~focal_mut,
ncol = 1,
scales = 'free_y',
labeller = label_bquote(Mut.~italic(i)~'='~.(levels(contrib$focal_mut)[focal_mut]))) +
scale_x_discrete(name = expression(paste('Drug dose (', mu, 'M)', sep = '')),
breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1,3,5,7)]) +
scale_y_continuous(name = expression(symbol("\341")*italic(epsilon)[italic(ij)]*symbol("\361")),
breaks = pretty_breaks(n = 2)) +
scale_color_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = mut_colors) +
scale_fill_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust = 0,
size = 16),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14))
ggsave(file = paste('../plots/eps_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
#height = 120,
height = 200, # FIXME: uncomment if all mutations are being plotted
units = 'mm')
# plot total contributions
contrib_avg <- aggregate(formula = cbind(dF_j, eps_ij) ~ dose + focal_mut + mut_j,
data = contrib,
FUN = mean)
contrib_avg$term <- contrib_avg$dF_j*contrib_avg$eps_ij
contrib_avg$focal_mut <- factor(contrib_avg$focal_mut)
contrib_avg$dose <- factor(contrib_avg$dose, levels = c('0', paste('1e', -2:3, sep = '')))
contrib_sum <- aggregate(formula = term ~ dose + focal_mut,
data = contrib_avg,
FUN = sum)
plot_this <- rbind(contrib_avg,
data.frame(dose = contrib_sum$dose,
focal_mut = contrib_sum$focal_mut,
mut_j = 'Sum',
dF_j = NA,
eps_ij = NA,
term = contrib_sum$term))
ggplot(plot_this[plot_this$focal_mut %in% plot_these_focal_muts, ],
aes(x = dose, y = term, color = mut_j, group = mut_j, linetype = mut_j)) +
geom_line(size = 1) +
geom_point() +
facet_wrap(~focal_mut,
ncol = 1,
scales = 'free_y',
labeller = label_bquote(Mut.~italic(i)~'='~.(levels(contrib$focal_mut)[focal_mut]))) +
scale_x_discrete(name = expression(paste('Drug dose (', mu, 'M)', sep = '')),
breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1,3,5,7)]) +
scale_y_continuous(name = expression(symbol("\341")*delta*italic(F)[italic(j)]*symbol("\361")[italic(B)(italic(i))]%*%symbol("\341")*italic(epsilon)[italic(ij)]*symbol("\361")),
breaks = pretty_breaks(n = 2)) +
scale_color_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = c(mut_colors, Sum = 'black')) +
scale_fill_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = c(mut_colors, Sum = 'black')) +
scale_linetype_manual(values = c(rep('solid', length(unique(plot_this$mut_j)) - 1),
'dashed')) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust = 0,
size = 16),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14))
ggsave(file = paste('../plots/terms_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
#height = 120,
height = 200, # FIXME: uncomment if all mutations are being plotted
units = 'mm')
# plot weighted contributions
weights <- aggregate(formula = dF_j ~ dose + focal_mut + mut_j,
data = contrib_avg,
FUN = function(x) sum(x^2))
weights <- aggregate(formula = dF_j ~ dose + focal_mut,
data = weights,
FUN = sum)
colnames(weights)[3] <- 'sum_dF_j_squared'
contrib_sum <- merge(contrib_sum, weights, by = c('dose', 'focal_mut'), all = T)
contrib_sum$weighted_term <- contrib_sum$term / contrib_sum$sum_dF_j_squared
contrib_avg <- merge(contrib_avg, weights, by = c('dose', 'focal_mut'), all = T)
contrib_avg$weighted_term <- contrib_avg$term / contrib_avg$sum_dF_j_squared
plot_this <- rbind(contrib_avg,
data.frame(dose = contrib_sum$dose,
focal_mut = contrib_sum$focal_mut,
mut_j = 'Sum',
dF_j = NA,
eps_ij = NA,
term = contrib_sum$term,
sum_dF_j_squared = contrib_sum$sum_dF_j_squared,
weighted_term = contrib_sum$weighted_term))
ggplot(plot_this[plot_this$focal_mut %in% plot_these_focal_muts, ],
aes(x = dose, y = weighted_term, color = mut_j, group = mut_j, linetype = mut_j)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_line(size = 1) +
geom_point() +
facet_wrap(~focal_mut,
ncol = 1,
scales = 'free_y',
labeller = label_bquote(Mut.~italic(i)~'='~.(levels(contrib$focal_mut)[focal_mut]))) +
scale_x_discrete(name = expression(paste('Drug dose (', mu, 'M)', sep = '')),
breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1,3,5,7)]) +
scale_y_continuous(name = expression(omega[italic(i)]%*%symbol("\341")*delta*italic(F)[italic(j)]*symbol("\361")[italic(B)(italic(i))]%*%symbol("\341")*italic(epsilon)[italic(ij)]*symbol("\361")),
breaks = pretty_breaks(n = 3)) +
scale_color_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = c(mut_colors, Sum = 'black')) +
scale_fill_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = c(mut_colors, Sum = 'black')) +
scale_linetype_manual(values = c(rep('solid', length(unique(plot_this$mut_j)) - 1),
'dashed')) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust = 0,
size = 16),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14))
ggsave(file = paste('../plots/weighted_terms_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
#height = 120,
height = 200, # FIXME: uncomment if all mutations are being plotted
units = 'mm')
# plot weights
ggplot(weights, aes(x = dose, y = 1/sum_dF_j_squared, group = focal_mut, color = focal_mut)) +
geom_line() +
geom_point() +
scale_x_discrete(name = expression(paste('Drug dose (', mu, 'M)', sep = '')),
breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1,3,5,7)]) +
scale_y_continuous(name = expression(paste('Weight, ', italic(omega), sep = '')),
trans = 'log10') +
scale_color_manual(name = expression(paste('Mut. ', italic(j), sep = '')),
values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust = 0,
size = 16),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14))
ggsave(file = paste('../plots/weights_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
#height = 120,
height = 200, # FIXME: uncomment if all mutations are being plotted
units = 'mm')
# get sum of effective interactions and CV of distribution of effective interactions
tst <- do.call(data.frame,
aggregate(formula = weighted_term ~ dose + focal_mut,
data = plot_this[!plot_this$mut_j == 'Sum', ],
FUN = function(x) c(sum(x), sd(x)/mean(x), sum(x)^2)))
colnames(tst) <- c('dose', 'mut', 'sum_effinter', 'cv_effinter', 'squared_sum_effinter')
plot_this$expected_r2_denom <- plot_this$weighted_term^2 * plot_this$sum_dF_j_squared / plot_this$dF_j^2
tst2 <- aggregate(formula = expected_r2_denom ~ dose + focal_mut,
data = plot_this[!plot_this$mut_j == 'Sum', ],
FUN = sum)
colnames(tst2)[2] <- 'mut'
tst <- merge(tst, tst2)
tst$expected_r2 <- 1/(1 + tst$cv_effinter^2)
tst$expected_r2_v2 <- tst$squared_sum_effinter/tst$expected_r2_denom
tst <- merge(tst, slopes[, c('dose', 'mut', 'R2')],
by = c('dose', 'mut'),
all = T)
limits <- c(tst$expected_r2_v2, tst$R2)
limits <- c(min(limits), max(limits))
ggplot(tst, aes(x = R2, y = expected_r2_v2, color = mut, alpha = dose)) +
geom_abline(slope = 1, intercept = 0, color = '#d1d3d4') +
geom_point(shape = 16,
cex = 3) +
scale_x_continuous(name = expression(paste('Expected ', italic(R)^2)),
limits = limits,
breaks = pretty_breaks(n = 3)) +
scale_y_continuous(name = expression(paste('Empirical ', italic(R)^2)),
limits = limits,
breaks = pretty_breaks(n = 3)) +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(hjust = 0,
size = 16),
strip.text.y = element_text(angle = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14))
ggsave(file = paste('../plots/r2_approx2_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
#height = 120,
height = 200, # FIXME: uncomment if all mutations are being plotted
units = 'mm')
}
