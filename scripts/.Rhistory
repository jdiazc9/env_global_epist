<<<<<<< Updated upstream
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors)
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)])
ggplot(df, aes(x = dose, y = d_f, fill = knock_in)) +
geom_bar(stat = 'identity') +
facet_wrap(~ knock_in,
ncol = 1,
scales = 'free_y') +
scale_fill_manual(values = mut_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = expression(paste('Fitness effect, ', Delta*italic(f), sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
df <- ge_data[ge_data$background == '', ]
ggplot(df, aes(x = dose, y = d_f, fill = knock_in)) +
geom_bar(stat = 'identity') +
facet_wrap(~ knock_in,
ncol = 1,
scales = 'free_y') +
scale_fill_manual(values = mut_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = expression(paste('Fitness effect, ', Delta*italic(f), sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(df, aes(x = dose, y = d_f, fill = knock_in)) +
geom_bar(stat = 'identity') +
facet_wrap(~ knock_in,
ncol = 1,
scales = 'free_y') +
scale_fill_manual(values = mut_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = expression(paste('Fitness effect on wild-type, ', Delta*italic(f), sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(df, aes(x = dose, y = d_f, fill = knock_in)) +
geom_bar(stat = 'identity') +
facet_wrap(~ knock_in,
ncol = 1,
scales = 'free_y') +
scale_fill_manual(values = mut_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = expression(paste('Fitness effect on wild-type, ', Delta*italic(f), '(w.t.)', sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
df <- aggregate(cbind(background_f, d_f) ~ dose,
data = df,
FUN = sum)
df$background_f <- df$background_f / 4
df$expected_f <- df$background_f + df$d_f
df <- merge(df[, c('dose', 'expected_f')],
unique(ge_data[ge_data$background == '', c('dose', 'background_f')]))
df <- gather(df, group, value, expected_f:background_f)
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = expression(paste('Fitness effect, ', Delta*italic(f), sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.title.x = element_blank(),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = expression(paste('Fitness effect, ', Delta*italic(f), sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.title.x = element_blank(),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1))
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = expression(paste('Fitness effect, ', Delta*italic(f), sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.title.x = element_blank(),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 0))
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = expression(paste('Fitness effect, ', Delta*italic(f), sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.title.x = element_blank(),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0))
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)]) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = expression(paste('Fitness effect, ', Delta*italic(f), sep = '')),
breaks = pretty_breaks(n = 3)) +
=======
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'grey50') +
scale_color_manual(values = mut_colors) +
>>>>>>> Stashed changes
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.title.x = element_blank(),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0))
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = 'Fitnes of quadruple mutant',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.title.x = element_blank(),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0))
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = 'Fitnes of quadruple mutant',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.title.x = element_blank(),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0),
legend.position = 'bottom')
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = 'Fitnes of quadruple mutant',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.title.x = element_blank(),
axis.text = element_text(size = 16),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0),
legend.position = 'bottom')
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)]) +
scale_y_continuous(name = 'Fitnes of quadruple mutant',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0),
legend.position = 'bottom')
ggplot(df, aes(x = dose, y = d_f, fill = knock_in)) +
geom_bar(stat = 'identity') +
facet_wrap(~ knock_in,
ncol = 1,
scales = 'free_y') +
scale_fill_manual(values = mut_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = expression(paste('Fitness effect on wild-type, ', Delta*italic(f), '(w.t.)', sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = 'Fitnes of quadruple mutant',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0),
legend.position = 'bottom')
df <- ge_data[ge_data$background == '', ]
ggplot(df, aes(x = dose, y = d_f, fill = knock_in)) +
geom_bar(stat = 'identity') +
facet_wrap(~ knock_in,
ncol = 1,
scales = 'free_y') +
scale_fill_manual(values = mut_colors) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = expression(paste('Fitness effect on wild-type, ', Delta*italic(f), '(w.t.)', sep = '')),
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggsave(file = paste('../plots/fitness_effects_wt_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 125,
height = 200,
units = 'mm')
df <- aggregate(cbind(background_f, d_f) ~ dose,
data = df,
FUN = sum)
df$background_f <- df$background_f / 4
df$expected_f <- df$background_f + df$d_f
df <- merge(df[, c('dose', 'expected_f')],
unique(ge_data[ge_data$background == '', c('dose', 'background_f')]))
df <- gather(df, group, value, expected_f:background_f)
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = 'Fitnes of quadruple mutant',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0),
legend.position = 'bottom')
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis//(sum of individual fitness effects)')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = 'Fitnes of quadruple mutant',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0),
legend.position = 'bottom')
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis\n(sum of individual fitness effects)')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = 'Fitnes of quadruple mutant',
breaks = pretty_breaks(n = 3)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0),
legend.position = 'bottom')
ggsave(file = paste('../plots/fitness_effects_quad_vs_noEpist_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 125,
height = 125,
units = 'mm')
<<<<<<< Updated upstream
ggsave(file = paste('../plots/fitness_effects_quad_vs_noEpist_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 175,
height = 125,
units = 'mm')
ggsave(file = paste('../plots/fitness_effects_quad_vs_noEpist_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 125,
height = 100,
units = 'mm')
ggsave(file = paste('../plots/fitness_effects_quad_vs_noEpist_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
height = 100,
units = 'mm')
ggplot(df, aes(x = dose, y = value, fill = group)) +
geom_bar(stat = 'identity',
position = position_dodge(),
color = 'black') +
scale_fill_manual(values = fitness_colors[c(2, 1)],
labels = c('Measured fitness', 'Expected if no epistasis\n(sum of individual fitness effects)')) +
scale_x_discrete(breaks = c('0', '1e-1', '1e1', '1e3'),
labels = mylabels[c(1, 3, 5, 7)],
name = expression(paste('Drug dose (', mu, 'M)', sep = ''))) +
scale_y_continuous(name = 'Fitnes\nof quadruple mutant',
breaks = pretty_breaks(n = 3)) +
=======
source("~/GitHub/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
source("~/GitHub/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
source("~/GitHub/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
source("~/GitHub/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
source("~/GitHub/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
warnings()
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source('ecoFunctions.R')
L <- 4 # number of mutations
muts <- paste('m', 1:L, sep = '')
genots <- orderName(unlist(sapply(1:length(muts),
FUN = function(i) sapply(combn(muts,
i,
simplify = FALSE),
FUN = paste, collapse = ','))))
genots
length(genots)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
genots
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
lambda_i
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
lambda_i
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
lambda_i
# CASE 1: fitness is exponential transformation on latent additive variable
lambda_i <- rnorm(L, mean = 0, sd = 1)
f <- function(lambda) 1 - exp(-lambda)
landscape <- data.frame(genotype = genots,
fitnes = sapply(genots,
FUN = function(g) {
g <- strsplit(g, split = '')[[1]]
lambda <- sum(lambda_i[g])
return(f(lambda))
}))
View(landscape)
g <- 'm1'
g <- strsplit(g, split = '')[[1]]
g
landscape <- data.frame(genotype = genots,
fitnes = sapply(genots,
FUN = function(g) {
g <- strsplit(g, split = ',')[[1]]
lambda <- sum(lambda_i[g])
return(f(lambda))
}))
g
g <- 'm1'
g <- strsplit(g, split = ',')[[1]]
g
lambda <- sum(lambda_i[g])
lambda
lambda_i
# CASE 1: fitness is exponential transformation on latent additive variable
lambda_i <- setNames(rnorm(L, mean = 0, sd = 1), muts)
lambda_i
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
g <- 'm1,m2'
g <- strsplit(g, split = ',')[[1]]
lambda_i
lambda_i[g]
gedf <- makeGEdata(landscape)
View(gedf)
ggplot(gedf[gedf$knock_in == 'm1', ], aes(x = background_f, y = d_f)) +
geom_point()
lambda_i
ggplot(gedf[gedf$knock_in == 'm8', ], aes(x = background_f, y = d_f)) +
geom_point()
ggplot(gedf[gedf$knock_in == 'm1', ], aes(x = background_f, y = d_f)) +
geom_point()
ggplot(gedf[gedf$knock_in == 'm1', ], aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black',
cex = 3) +
geom_smooth(method = 'lm',
formula = y~x,
fullrange = T,
se = F,
color = '#1e9fd3') +
scale_x_continuous(name = expression(paste('Fitness of genetic background, ', italic(f), '(', italic(B), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste('Fitness effect\nof mut. 1, ', Delta, italic(f), sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
>>>>>>> Stashed changes
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
<<<<<<< Updated upstream
strip.text = element_text(size = 16, vjust = 0, hjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
axis.text.x = element_text(size = 16,
vjust = 0),
legend.title = element_blank(),
legend.text = element_text(size = 14, hjust = 0),
legend.position = 'bottom')
ggsave(file = paste('../plots/fitness_effects_quad_vs_noEpist_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
height = 100,
units = 'mm')
ggsave(file = paste('../plots/fitness_effects_quad_vs_noEpist_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 150,
height = 100,
units = 'mm')
=======
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1))
ggsave(file = '../plots/illustrations/case1.pdf',
device = 'pdf',
width = 100,
height = 100,
units = 'mm')
warnings()
ggplot(gedf[gedf$knock_in == 'm1', ], aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black',
cex = 3) +
geom_smooth(method = 'lm',
formula = y~x,
fullrange = T,
se = F,
color = '#1e9fd3') +
scale_x_continuous(name = expression(paste(italic(f), '(', italic(B), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste(Delta, italic(f), sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1))
ggsave(file = '../plots/illustrations/case1.pdf',
device = 'pdf',
width = 100,
height = 100,
units = 'mm')
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
range(lambda_i)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
sumLambda
View(sumLambda)
range(sumLambda)
range(sumLambda$fitnes)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
range(sumLambda$fitnes)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
analytic_f <- data.frame(fB = seq(min(landscape$fitness, max(landscape$fitness), length.out = 200)))
View(analytic_f)
analytic_f <- data.frame(fB = seq(min(landscape$fitness), max(landscape$fitness), length.out = 200))
analytic_f <- data.frame(fB = seq(min(landscape$fitness[!grepl('m1', landscape$genotype)]),
max(landscape$fitness[!grepl('m1', landscape$genotype)]),
length.out = 200))
analytic_f <- data.frame(fB = seq(min(sumLambda$fitness[!grepl('m1', landscape$genotype)]),
max(sumLambda$fitness[!grepl('m1', landscape$genotype)]),
length.out = 200))
analytic_f <- data.frame(lB = seq(min(sumLambda$fitness[!grepl('m1', landscape$genotype)]),
max(sumLambda$fitness[!grepl('m1', landscape$genotype)]),
length.out = 200))
analytic_f$lBi <- analytic_f$lB + lambda_i['m1']
analytic_f$fB <- f(analytic_f$lB)
analytic_f$fBi <- f(analytic_f$lBi)
analytic_f$df <- analytic_f$fBi - analytic_f$fB
plot(analytic_f$fB, analytic_f$df)
ggplot(gedf[gedf$knock_in == 'm1', ], aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black',
cex = 3) +
geom_line(data = analytic_f,
aes(x = fB, y = df),
color = 'gray',
linewidth = 0.5) +
geom_smooth(method = 'lm',
formula = y~x,
fullrange = T,
se = F,
color = '#1e9fd3') +
scale_x_continuous(name = expression(paste(italic(f), '(', italic(B), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste(Delta, italic(f), sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1))
ggplot(gedf[gedf$knock_in == 'm1', ], aes(x = background_f, y = d_f)) +
geom_abline(slope = 0, intercept = 0, color = '#d1d3d4') +
geom_point(color = 'black',
cex = 3) +
geom_path(data = analytic_f,
aes(x = fB, y = df),
color = 'gray',
linewidth = 0.5) +
geom_smooth(method = 'lm',
formula = y~x,
fullrange = T,
se = F,
color = '#1e9fd3') +
scale_x_continuous(name = expression(paste(italic(f), '(', italic(B), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste(Delta, italic(f), sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1))
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
min(sumLambda$fitness)
max(sumLambda$fitness)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
ggplot() +
geom_function(fun = f, color = 'orange')
ggplot() +
geom_function(fun = f, color = 'orange') +
scale_x_continuous(name = expression(lambda),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste('Fitness, ', italic(f), '(', italic(lambda), ')' sep = '')),
ggplot() +
geom_function(fun = f, color = 'orange') +
scale_x_continuous(name = expression(lambda),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste('Fitness, ', italic(f), '(', italic(lambda), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
# CASE 2: fitness is non-exponential transformation on latent additive variable
f <- function(lambda) 1 - ((lambda-5)/5)^2
ggplot() +
geom_function(fun = f, color = 'orange') +
scale_x_continuous(name = expression(lambda),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2))
ggplot() +
geom_function(fun = f, color = 'orange') +
scale_x_continuous(name = expression(italic(lambda)),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2))
ggplot() +
geom_function(fun = f, color = 'orange') +
scale_x_continuous(name = expression(italic(lambda)),
breaks = pretty_breaks(n = 3),
limits = c(0, 5),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste('Fitness, ', italic(f), '(', italic(lambda), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
# CASE 2: fitness is non-exponential transformation on latent additive variable
f <- function(lambda) 1 - ((lambda-5)/5)^2
ggplot() +
geom_function(fun = f, color = 'orange') +
scale_x_continuous(name = expression(italic(lambda)),
breaks = pretty_breaks(n = 3),
limits = c(0, 5),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(italic(f)~italic(lambda)),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
# CASE 2: fitness is non-exponential transformation on latent additive variable
f <- function(lambda) 1 - ((lambda-5)/5)^2
ggplot() +
geom_function(fun = f, color = 'orange') +
scale_x_continuous(name = expression(italic(lambda)),
breaks = pretty_breaks(n = 3),
limits = c(0, 5),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste('Fitness, ', italic(f), '(', italic(lambda), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2))
ggplot() +
geom_function(fun = f, color = 'orange') +
scale_x_continuous(name = expression(italic(lambda)),
breaks = pretty_breaks(n = 3),
limits = c(0, 5),
expand = rep(0.05, 2)) +
scale_y_continuous(name = expression(paste('Fitness, ', italic(f), '(', italic(lambda), ')', sep = '')),
breaks = pretty_breaks(n = 3),
expand = rep(0.05, 2)) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1))
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
source("C:/Users/juand/OneDrive/Documentos/GitHub/env_global_epist/scripts/ge_patterns_illust.R", echo=TRUE)
>>>>>>> Stashed changes
