panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2, color = mut)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'black') +
scale_color_manual(vlaues = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'black') +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
n_boot <- 500
random_landscapes <- data.frame(id = character(0),
dose = character(0),
knock_in = character(0),
slope = numeric(0),
R2 = numeric(0),
var_rel = numeric(0))
for (d in 1:length(unique(ge_data$dose))) {
df.rnd <- cbind(genot_matrix, fun = data[, 2 + d])
for (n in 1:n_boot) {
df.rnd$fun <- sample(df.rnd$fun)
ge_data.rnd.i <- makeGEdata(matrix2string(df.rnd))
for (m in unique(ge_data.rnd.i$knock_in)) {
lmod <- lm(d_f ~ background_f, data = ge_data.rnd.i[ge_data.rnd.i$knock_in == m, ])
random_landscapes <- rbind(random_landscapes,
data.frame(id = paste('rnd', d, n, sep = '.'),
dose = unique(ge_data$dose)[d],
knock_in = m,
slope = as.numeric(lmod$coefficients[2]),
R2 = summary(lmod)$r.squared,
var_rel = var(ge_data.rnd.i$d_f[ge_data.rnd.i$knock_in == m])/var(ge_data.rnd.i$background_f[ge_data.rnd.i$knock_in == m])))
}
}
}
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'gray') +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'black') +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2)) +
stat_density_2d(aes(fill = after_stat(density)), geom = "raster", contour = FALSE) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'grey50') +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2)) +
stat_density_2d(aes(fill = after_stat(density)),
geom = "raster",
contour = FALSE,
bins = 100) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'grey50') +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2)) +
stat_density_2d(aes(fill = after_stat(density)),
geom = "raster",
contour = FALSE,
bins = 50) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'grey50') +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2)) +
stat_density_2d(aes(fill = after_stat(density)),
geom = "raster",
contour = FALSE,
bins = 10) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'grey50') +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggplot(random_landscapes,
aes(x = log10(var_rel), y = R2)) +
stat_density_2d(aes(fill = after_stat(density)),
geom = 'raster',
contour = FALSE) +
geom_arrowsegment(data = map_segments,
aes(x = log10(xstart), xend = log10(xend), y = ystart, yend = yend, color = mut),
arrow_positions = 1,
arrows = arrow(angle = 25,
type = 'open',
length = unit(0.25, "cm")),
linewidth = 0.5) +
geom_blank(data = epist_coords) +
scale_x_continuous(name = expression(paste('var ', Delta, italic(f), ' / ', 'var ', italic(f), '(', italic(B), ')', sep = '')),
breaks = c(-2, 0, 2),
labels = c(expression(10^-2),
expression(10^0),
expression(10^2)),
expand = c(0,0)) +
scale_y_continuous(name = expression(italic(R)^2),
breaks = c(0, 0.3, 0.6, 0.9),
expand = c(0,0)) +
scale_fill_gradient2(low = 'white', high = 'grey50') +
scale_color_manual(values = mut_colors) +
theme_bw() +
theme(aspect.ratio = 1,
panel.grid = element_blank(),
strip.background = element_blank(),
strip.text = element_text(size = 16, vjust = 0),
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14, hjust = 1),
legend.position = 'none')
ggsave(file = paste('../plots/epistMap_randomLandscapes_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 75,
height = 75,
units = 'mm')
ggsave(file = paste('../plots/epistMap_randomLandscapes_', saveplot, '.pdf', sep = ''),
device = 'pdf',
width = 125,
height = 125,
units = 'mm')
source("~/GitHub/env_global_epist/scripts/analyze_data_new.R", echo=TRUE)
rm(list = ls())
source('ecoFunctions.R')
library(RColorBrewer)
library(ggarchery)
library(ggExtra)
library(tidyr)
library(lmtest)
# Plasmodium falciparum carrying subsets of 4 mutations: N51I, C59R, S108N, I164L
file <- '../data/growth_rates_pyr.txt'
#file <- '../data/growth_rates_cyc.txt' # FIXME: uncomment for cycloguanil
data <- read.table(file)
data[, 2] <- sprintf("%04d", data[, 2])
doses <- c(0, 10^(-2:6))
colnames(data) <- c('genot_id', 'genot_bin', paste('dose_', 0:(length(doses) - 1), sep = ''))
muts <- c('N51I', 'C59R', 'S108N', 'I164L') # in the order they appear in the original data frame
mut_colors <- setNames(c('#e76d57', '#acd152', '#e7da5c', '#7a9dd2'), # nice colors to identify mutations
c("C59R", "I164L", "N51I", "S108N"))
if (grepl('cyc', file)) { # label for saving plots ('pyr' or 'cyc' for pyrimethamine or cycloguanil respectively)
saveplot <- 'cyc'
} else if (grepl('pyr', file)) {
saveplot <- 'pyr'
}
genot_matrix <- do.call(rbind,
lapply(data$genot_bin,
FUN = function(genot) {
strsplit(genot, split = '')[[1]]
}))
colnames(genot_matrix) <- muts
genot_matrix <- as.data.frame(genot_matrix)
# get global epistasis patterns
ge_data <- data.frame(dose = numeric(0),
background = character(0),
knock_in = character(0),
background_f = numeric(0),
d_f = numeric(0))
for (d in 1:length(doses)) {
df <- cbind(genot_matrix, fun = data[, 2+d])
ge_df <- makeGEdata(matrix2string(df))
ge_data <- rbind(ge_data,
cbind(dose = doses[d], ge_df))
}
ge_data$dose <- setNames(c('0', paste('1e', -2:6, sep = '')),
as.character(doses))[as.character(ge_data$dose)]
# filter out highest doses
ge_data <- ge_data[!(ge_data$dose %in% c('1e4', '1e5', '1e6')), ]
tst <- ge_data[ge_data$dose == '1e1' & ge_data$knock_in == 'I164L', ]
tst$background <- sapply(tst$background,
FUN = function(x) {
out <- strsplit(x, split = ',')[[1]]
out <- substr(out, 1, 1)
out <- paste(out, collapse = '')
return(out)
})
tst$background[1] <- 'Wild-type'
tst$background <- factor(tst$background,
levels = tst$background)
ggplot(tst, aes(x = background, y = d_f, fill = background)) +
geom_bar(stat = 'identity',
width = 0.85) +
scale_fill_manual(values = c('red', rep('gray', 6))) +
scale_x_discrete(name = 'Genetic background') +
scale_y_continuous(name = expression(Delta*italic(F))) +
geom_hline(yintercept = 0) +
theme_bw() +
theme(aspect.ratio = 0.5,
panel.grid = element_blank(),
legend.position = 'none',
axis.title = element_text(size = 18),
axis.text.x = element_text(size = 16,
angle = 45,
hjust = 1),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 18)) +
ggtitle('Focal mut.: I164L, dose: 10 uM')
View(tst)
ggplot(tst, aes(x = background_f, y = d_f, fill = background)) +
geom_point()
ggplot(tst, aes(x = background_f, y = d_f, fill = background)) +
geom_smooth(method = 'lm',
formula = y ~ x,
se = F,
color = 'firebrick1') +
geom_point()
ggplot(tst, aes(x = background_f, y = d_f)) +
geom_smooth(method = 'lm',
formula = y ~ x,
se = F,
color = 'firebrick1') +
geom_point()
ggplot(tst, aes(x = background_f, y = d_f)) +
geom_hline(yintercept = 0) +
geom_smooth(method = 'lm',
formula = y ~ x,
se = F,
color = 'firebrick1') +
geom_point(cex = 3)
ggplot(tst, aes(x = background_f, y = d_f)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_smooth(method = 'lm',
formula = y ~ x,
se = F,
color = 'firebrick1')
ggplot(tst, aes(x = background_f, y = d_f)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_smooth(method = 'lm',
formula = y ~ x,
se = F,
color = 'firebrick1') +
geom_point(cex = 3)
ggplot(tst, aes(x = background_f, y = d_f)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_smooth(method = 'lm',
formula = y ~ x,
se = F,
color = 'firebrick1') +
geom_point(cex = 3) +
scale_x_continuous(name = expression(paste('Genetic background fitness', italic(f)[B], sep = ''))) +
scale_y_continuous(name = expression(Delta*italic(F)))
ggplot(tst, aes(x = background_f, y = d_f)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_smooth(method = 'lm',
formula = y ~ x,
se = F,
color = 'firebrick1') +
geom_point(cex = 3) +
scale_x_continuous(name = expression(paste('Genetic background fitness, ', italic(F)[B], sep = ''))) +
scale_y_continuous(name = expression(Delta*italic(F))) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
legend.position = 'none',
axis.title = element_text(size = 18),
axis.text.x = element_text(size = 16,
angle = 45,
hjust = 1),
axis.text.y = element_text(size = 16),
plot.title = element_text(size = 18)) +
ggtitle('Focal mut.: I164L, dose: 10 uM')
ggplot(tst, aes(x = background_f, y = d_f)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_smooth(method = 'lm',
formula = y ~ x,
se = F,
color = 'firebrick1') +
geom_point(cex = 3) +
scale_x_continuous(name = expression(paste('Genetic background fitness, ', italic(F)[B], sep = ''))) +
scale_y_continuous(name = expression(Delta*italic(F))) +
theme_bw() +
theme(aspect.ratio = 0.6,
panel.grid = element_blank(),
legend.position = 'none',
axis.title = element_text(size = 18),
axis.text = element_text(size = 16),
plot.title = element_text(size = 18)) +
ggtitle('Focal mut.: I164L, dose: 10 uM')
ggsave(file = paste('../plots/for_Alvaro_2.pdf', sep = ''),
device = 'pdf',
width = 100,
height = 80,
units = 'mm')
ggsave(file = paste('../plots/for_Alvaro_2.pdf', sep = ''),
device = 'pdf',
width = 120,
height = 100,
units = 'mm')
